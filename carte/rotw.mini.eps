%!PS
/globalscale 1 def
/pagewidth 595 def
/pageheight 842 def

(library/pdf_library.ps) include
(library/libcarte.ps) include
/FONTDIR (fonts/) def
FONTDIR(arial_narrow.ps)! include
FONTDIR(encodings.ps)! include
0 0 8425 5840 bboxset

BASEDIR(rotw.resources.ps)! include

<< /Title ((ROTW Map for EU9 - White version)) >> infochunk
begindocument
beginpage
(q 0.0 0.096 -0.096 -0.0 575.0 15.0 cm\n) out
TARGET(.background.clp)! copymap
detroitdict {detroitsimple pop} forall

/clipping false def
/risque {pop} def
/counter 1 def
/cx 50 def
/cxi 800 def
/cy 5640 def
/nullonemore {  cy 3520 lt {/cy 5640 def /cx cx cxi add def}if } bd
/onemore { /cy cy 80 sub def nullonemore } bd
/orage {pop [[counter 3 string cvs ( )! (FontArialNarrow)][ 4 -1 roll (FontArialNarrow-Bold)]] cx cy 80 onemore multitext (q 0 G 1 g )out 2 copy exch display space display ( 80 80 re B Q\n)out exch 40 add exch counter 3 string cvs /counter counter 1 add def 3 1 roll 1001 80 (FontArialNarrow) centertext pop} bd
/treatzone {
    /pays exch def
    [
        resourcesdict /values get dup pays known {
            pays get [ exch (   )! (FontArialNarrow) ]
        } {pop} ifelse
        [pays(FontArialNarrow-Bold)]
        subnamesdict pays get dup length 0 gt {
            {2 copy length exch length exch 2 copy eq {pop pop lt}{lt exch pop exch pop} ifelse} .sort
            [ exch (   ) exch {( / )} forall pop ]!! [ exch (FontArialNarrow) ]
        } { pop } ifelse
    ] cx cy 80 multitext onemore
} bd

/equivs << (Éthiopie) (Ethiopie) (Đại Việt) (Dai Viet)(Bānglā)(Bangla)(Célèbes)(Celebes)(Côte d’Ivoire)(Cote d'Ivoire)
        (Côte d’Or)(Cote d'Or)(Îles de la Sonde) (Iles de la Sonde) (Îles aux Épices) (Iles aux epices)
>> def
/stringlt {equivs 1 index known {equivs exch get}if /a exch def equivs 1 index known {equivs exch get}if /b exch def /i 0 def {a length 1 sub i lt b length 1 sub i lt or{a length b length lt exit}if a i get b i get 2 copy eq {pop pop /i i 1 add def}{gt exit}ifelse} loop} def

BASEDIR(orage.ps)! include
onemore
(Europe) treatzone
/cy 0 def onemore
/cxi 1200 def
[ subnamesdict { pop 50 string cvs dup (Europe) eq {pop} if } forall ] {stringlt} bind .sort
{treatzone} forall

(Q\n) out

/countdict 10 dict def
resourcesdict {
    /cdict exch def
    /cname exch def
    countdict cname known not {
        countdict cname 0 put
    }if
    cdict {
        cname (forces) eq cname (values) eq or not {
            countdict cname 2 copy get 4 -1 roll add put
        }{pop} ifelse
        20 string cvs /cc exch def
        namesdict cc known not {
            cc (Europe~) anchorsearch {
                pop pop
            } { pop
                [cc ( in resource )cname 20 string cvs (: unknown province)] !! print mismatchError
            } ifelse
        } if
    } forall
}forall
/stats BASEDIR(rotw.resources.txt)! writefile def
countdict {
    /cval exch def /cname exch def
    stats [cname 20 string cvs (: ) cval 12 string cvs (\n)]!! writestring
} forall

endpage
enddocument
