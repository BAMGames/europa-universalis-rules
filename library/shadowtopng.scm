(define (shadowtopng stringinput stringoutput)
  (let* (
	 (namepnm (string-append stringinput ".pnm"))
	 (namepgm (string-append stringinput ".pgm"))
	 (namepng (string-append stringoutput ".png"))
	 (source (car (gimp-file-load 1 namepnm namepnm)))
	 (firstlayer (aref (cadr (gimp-image-get-layers source)) 0))
	 (shadow (car (gimp-file-load 1 namepgm namepgm)))
	 (shadowlayer (aref (cadr (gimp-image-get-layers shadow)) 0))
	 (mask (car (gimp-layer-create-mask firstlayer ADD-WHITE-MASK)))
	 )
    (gimp-selection-all shadow)
    (gimp-edit-copy shadowlayer)
    (gimp-layer-add-alpha firstlayer)
    (gimp-layer-add-mask firstlayer mask)
    (gimp-floating-sel-anchor (car (gimp-edit-paste mask 1)))
    (gimp-layer-remove-mask firstlayer MASK-APPLY)
    (gimp-context-set-foreground '(83 153 224))
    (gimp-context-set-background '(224 224 224))
    (plug-in-autocrop 0 source firstlayer)
    (gimp-image-resize source
		       (+ 20 (car (gimp-image-width source)))
		       (+ 20 (car (gimp-image-height source)))
		       10
		       10)
    (let* (
	   (width (car (gimp-image-width source)))
	   (height (car (gimp-image-height source)))
	   (newlayer (car (gimp-layer-new source width height RGBA-IMAGE "gradient" 100 0)))
	   )
      (gimp-image-add-layer source newlayer 0)
      (gimp-image-lower-layer-to-bottom source newlayer)
      (gimp-selection-all source)
      (gimp-edit-blend newlayer FG-BG-RGB-MODE NORMAL-MODE GRADIENT-LINEAR 100 0 REPEAT-NONE 0 0 1 0 1 0 0 (- width 1) (- height 1))
      (gimp-selection-none source)
      (file-png-save 1 source (car (gimp-image-flatten source)) namepng namepng 0 9 0 0 0 1 1)
      ))
  )
