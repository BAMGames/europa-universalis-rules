(define (xcftoshadow stringinput stringoutput)
  (let* ((filename0 (string-append stringinput ".xcf"))
	 (filename1 (string-append stringoutput ".pnm"))
	 (filename2 (string-append stringoutput ".pgm"))
         (img (car (gimp-file-load 1 filename0 filename0)))
         (layer (aref (cadr (gimp-image-get-layers img)) 0))
         (image-width (car (gimp-image-width img)))
	 (image-height (car (gimp-image-height img)))
	 (first-img (car (gimp-image-new image-width image-height RGB)))
	 (second-img (car (gimp-image-new image-width image-height RGB)))
	 (first-layer (car (gimp-layer-new first-img image-width image-height RGBA-IMAGE "Fond" 100.0 NORMAL-MODE)))
	 (second-layer (car (gimp-layer-new first-img image-width image-height RGBA-IMAGE "Copie" 100.0 NORMAL-MODE)))
	 (third-layer (car (gimp-layer-new second-img image-width image-height RGBA-IMAGE "Copie" 100.0 NORMAL-MODE)))
	 (fourth-layer (car (gimp-layer-new second-img image-width image-height RGBA-IMAGE "Alpha" 100.0 NORMAL-MODE)))
	 )
	 (begin
	   (gimp-image-add-layer first-img first-layer 1)
	   (gimp-image-add-layer first-img second-layer 0)
	   (gimp-image-add-layer second-img third-layer 0)
	   (gimp-image-add-layer second-img fourth-layer 1)
	   (gimp-palette-set-foreground '(0 0 0))
	   (gimp-palette-set-background '(255 255 255))
	   (gimp-edit-fill first-layer FOREGROUND-FILL)
	   (gimp-edit-fill fourth-layer FOREGROUND-FILL)
	   (gimp-selection-all first-img)
	   (gimp-edit-clear second-layer)
	   (gimp-selection-all second-img)
	   (gimp-edit-clear third-layer)
	   (script-fu-copy-visible img layer)
	   (gimp-floating-sel-anchor (car (gimp-edit-paste second-layer TRUE)))
	   (gimp-floating-sel-anchor (car (gimp-edit-paste third-layer TRUE)))
	   (plug-in-threshold-alpha 1 img second-layer 1)
	   (gimp-selection-layer-alpha third-layer)
	   (gimp-edit-fill fourth-layer BACKGROUND-FILL)
	   (gimp-selection-none second-img)
	   (gimp-selection-none first-img)
	   (gimp-image-remove-layer second-img third-layer)
	   (gimp-image-convert-grayscale second-img)
	   
	   (file-pnm-save 1 first-img (car (gimp-image-flatten first-img)) filename1 filename1 1)
	   (file-pnm-save 1 second-img (car (gimp-image-flatten second-img)) filename2 filename2 1)
	   (gimp-image-delete img)
	   (gimp-image-delete first-img)
	   (gimp-image-delete second-img)
      )))
