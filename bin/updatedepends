#!/bin/sh

# This program updates the plan
# bin/plan executes a fixed plan
# Probably, this should be launched before plan, but some parts will only
# work after plan (for example, latex dependencies are hard to compute and
# require, in fact, execution of the plan.
# The second part will be executed only if arg is non-void


# First part

## Plan self-management
json_pp -json_opt pretty,canonical -f json -t json < plan/rules > plan/rules2 && mv plan/rules2 plan/rules
find plan/bin -type f |LC_ALL=C sort > plan/axioms/plan.auto

## blasons
ls blasons/src/shield_*xcf | LC_ALL=C sort > plan/axioms/blasons.auto

## fonts
ls fonts/*afm fonts/*pfb fonts/*.spec | LC_ALL=C sort > plan/axioms/fonts.auto
for k in fonts/*.spec; do
    stem=$(basename "$k" .spec)
    for i in $(cat "$k" |grep '^files '|cut -f2- -d' '); do
        echo "fonts/$i.afm"
    done | LC_ALL=C sort > plan/in/$stem.in
done

## shadow
(for i in shadow/*.pnm; do j=${i%.pnm}; j=${j#*/};if [ ! -f "shadow/$j.xcf" ]; then echo "shadow/$j.pnm"; echo "shadow/$j.pgm";fi; done;ls shadow/*.xcf)| LC_ALL=C sort > plan/axioms/shadow.auto

## pions
ls pions/*.txt | grep -v 'pions/\(manifest\)\|\(counters\)\|\(moreadmin\).txt' > plan/in/pionseps.in
ls pions/*.txt | grep -v pions/manifest.txt > plan/axioms/pions.auto

# Second part
if [ -z "$1" ]; then
    exit 0
fi
